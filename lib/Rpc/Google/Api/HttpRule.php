<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/http.proto

namespace Google\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * `HttpRule` defines the mapping of an RPC method to one or more HTTP REST API
 * methods. The mapping determines what portions of the request message are
 * populated from the path, query parameters, or body of the HTTP request.  The
 * mapping is typically specified as an `google.api.http` annotation, see
 * "google/api/annotations.proto" for details.
 * The mapping consists of a mandatory field specifying a path template and an
 * optional `body` field specifying what data is represented in the HTTP request
 * body. The field name for the path indicates the HTTP method. Example:
 * ```
 * package google.storage.v2;
 * import "google/api/annotations.proto";
 * service Storage {
 *   rpc CreateObject(CreateObjectRequest) returns (Object) {
 *     option (google.api.http) {
 *       post: "/v2/{bucket_name=buckets/&#42;}/objects"
 *       body: "object"
 *     };
 *   };
 * }
 * ```
 * Here `bucket_name` and `object` bind to fields of the request message
 * `CreateObjectRequest`.
 * The rules for mapping HTTP path, query parameters, and body fields
 * to the request message are as follows:
 * 1. The `body` field specifies either `*` or a field path, or is
 *    omitted. If omitted, it assumes there is no HTTP body.
 * 2. Leaf fields (recursive expansion of nested messages in the
 *    request) can be classified into three types:
 *     (a) Matched in the URL template.
 *     (b) Covered by body (if body is `*`, everything except (a) fields;
 *         else everything under the body field)
 *     (c) All other fields.
 * 3. URL query parameters found in the HTTP request are mapped to (c) fields.
 * 4. Any body sent with an HTTP request can contain only (b) fields.
 * The syntax of the path template is as follows:
 *     Template = "/" Segments [ Verb ] ;
 *     Segments = Segment { "/" Segment } ;
 *     Segment  = "*" | "**" | LITERAL | Variable ;
 *     Variable = "{" FieldPath [ "=" Segments ] "}" ;
 *     FieldPath = IDENT { "." IDENT } ;
 *     Verb     = ":" LITERAL ;
 * `*` matches a single path component, `**` zero or more path components, and
 * `LITERAL` a constant.  A `Variable` can match an entire path as specified
 * again by a template; this nested template must not contain further variables.
 * If no template is given with a variable, it matches a single path component.
 * The notation `{var}` is henceforth equivalent to `{var=*}`.
 * Use CustomHttpPattern to specify any HTTP method that is not included in the
 * pattern field, such as HEAD, or "*" to leave the HTTP method unspecified for
 * a given URL path rule. The wild-card rule is useful for services that provide
 * content to Web (HTML) clients.
 *
 * Generated from protobuf message <code>google.api.HttpRule</code>
 */
class HttpRule extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the request field whose value is mapped to the HTTP body, or
     * `*` for mapping all fields not captured by the path pattern to the HTTP
     * body.
     *
     * Generated from protobuf field <code>string body = 7;</code>
     */
    private $body = '';
    /**
     * Additional HTTP bindings for the selector. Nested bindings must not
     * specify a selector and must not contain additional bindings.
     *
     * Generated from protobuf field <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     */
    private $additional_bindings;
    protected $pattern;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $get
     *           Used for listing and getting information about resources.
     *     @type string $put
     *           Used for updating a resource.
     *     @type string $post
     *           Used for creating a resource.
     *     @type string $delete
     *           Used for deleting a resource.
     *     @type string $patch
     *           Used for updating a resource.
     *     @type \Google\Api\CustomHttpPattern $custom
     *           Custom pattern is used for defining custom verbs.
     *     @type string $body
     *           The name of the request field whose value is mapped to the HTTP body, or
     *           `*` for mapping all fields not captured by the path pattern to the HTTP
     *           body.
     *     @type \Google\Api\HttpRule[]|\Google\Protobuf\Internal\RepeatedField $additional_bindings
     *           Additional HTTP bindings for the selector. Nested bindings must not
     *           specify a selector and must not contain additional bindings.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Api\Http::initOnce();
        parent::__construct($data);
    }

    /**
     * Used for listing and getting information about resources.
     *
     * Generated from protobuf field <code>string get = 2;</code>
     * @return string
     */
    public function getGet()
    {
        return $this->readOneof(2);
    }

    /**
     * Used for listing and getting information about resources.
     *
     * Generated from protobuf field <code>string get = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setGet($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Used for updating a resource.
     *
     * Generated from protobuf field <code>string put = 3;</code>
     * @return string
     */
    public function getPut()
    {
        return $this->readOneof(3);
    }

    /**
     * Used for updating a resource.
     *
     * Generated from protobuf field <code>string put = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPut($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Used for creating a resource.
     *
     * Generated from protobuf field <code>string post = 4;</code>
     * @return string
     */
    public function getPost()
    {
        return $this->readOneof(4);
    }

    /**
     * Used for creating a resource.
     *
     * Generated from protobuf field <code>string post = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPost($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Used for deleting a resource.
     *
     * Generated from protobuf field <code>string delete = 5;</code>
     * @return string
     */
    public function getDelete()
    {
        return $this->readOneof(5);
    }

    /**
     * Used for deleting a resource.
     *
     * Generated from protobuf field <code>string delete = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDelete($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Used for updating a resource.
     *
     * Generated from protobuf field <code>string patch = 6;</code>
     * @return string
     */
    public function getPatch()
    {
        return $this->readOneof(6);
    }

    /**
     * Used for updating a resource.
     *
     * Generated from protobuf field <code>string patch = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setPatch($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Custom pattern is used for defining custom verbs.
     *
     * Generated from protobuf field <code>.google.api.CustomHttpPattern custom = 8;</code>
     * @return \Google\Api\CustomHttpPattern
     */
    public function getCustom()
    {
        return $this->readOneof(8);
    }

    /**
     * Custom pattern is used for defining custom verbs.
     *
     * Generated from protobuf field <code>.google.api.CustomHttpPattern custom = 8;</code>
     * @param \Google\Api\CustomHttpPattern $var
     * @return $this
     */
    public function setCustom($var)
    {
        GPBUtil::checkMessage($var, \Google\Api\CustomHttpPattern::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * The name of the request field whose value is mapped to the HTTP body, or
     * `*` for mapping all fields not captured by the path pattern to the HTTP
     * body.
     *
     * Generated from protobuf field <code>string body = 7;</code>
     * @return string
     */
    public function getBody()
    {
        return $this->body;
    }

    /**
     * The name of the request field whose value is mapped to the HTTP body, or
     * `*` for mapping all fields not captured by the path pattern to the HTTP
     * body.
     *
     * Generated from protobuf field <code>string body = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setBody($var)
    {
        GPBUtil::checkString($var, True);
        $this->body = $var;

        return $this;
    }

    /**
     * Additional HTTP bindings for the selector. Nested bindings must not
     * specify a selector and must not contain additional bindings.
     *
     * Generated from protobuf field <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAdditionalBindings()
    {
        return $this->additional_bindings;
    }

    /**
     * Additional HTTP bindings for the selector. Nested bindings must not
     * specify a selector and must not contain additional bindings.
     *
     * Generated from protobuf field <code>repeated .google.api.HttpRule additional_bindings = 11;</code>
     * @param \Google\Api\HttpRule[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAdditionalBindings($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Api\HttpRule::class);
        $this->additional_bindings = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getPattern()
    {
        return $this->whichOneof("pattern");
    }

}

