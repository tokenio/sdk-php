<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bankinfo.proto

namespace Io\Token\Proto\Common\Bank;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.bank.Bank</code>
 */
class Bank extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string id = 1;</code>
     */
    private $id = '';
    /**
     * Generated from protobuf field <code>string name = 2;</code>
     */
    private $name = '';
    /**
     * Square bank avatar icon
     *
     * Generated from protobuf field <code>string logo_uri = 3;</code>
     */
    private $logo_uri = '';
    /**
     * Full size bank icon
     *
     * Generated from protobuf field <code>string full_logo_uri = 4;</code>
     */
    private $full_logo_uri = '';
    /**
     * Works with appless payments
     *
     * Generated from protobuf field <code>bool supports_appless = 5;</code>
     */
    private $supports_appless = false;
    /**
     * Connection allows for retrieval of information
     *
     * Generated from protobuf field <code>bool supports_information = 7;</code>
     */
    private $supports_information = false;
    /**
     * Connection requires external authorization for creating transfers
     *
     * Generated from protobuf field <code>bool requires_external_auth = 8;</code>
     */
    private $requires_external_auth = false;
    /**
     * Connection allows for payment initiation
     *
     * Generated from protobuf field <code>bool supports_send_payment = 9;</code>
     */
    private $supports_send_payment = false;
    /**
     * Connection allows for receiving payments
     *
     * Generated from protobuf field <code>bool supports_receive_payment = 10;</code>
     */
    private $supports_receive_payment = false;
    /**
     * Connection only supports immediate redemption of transfers
     *
     * Generated from protobuf field <code>bool requires_legacy_transfer = 14;</code>
     */
    private $requires_legacy_transfer = false;
    /**
     * Provider of the bank, e.g. Yodlee, FinApi, Token
     *
     * Generated from protobuf field <code>string provider = 11;</code>
     */
    private $provider = '';
    /**
     * The ISO 3166-1 alpha-2 two letter country code in upper case.
     *
     * Generated from protobuf field <code>string country = 12;</code>
     */
    private $country = '';
    /**
     * Optional identifier of the bank, not guaranteed to be unique across all banks. BLZ for German banks.
     *
     * Generated from protobuf field <code>string identifier = 13;</code>
     */
    private $identifier = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $name
     *     @type string $logo_uri
     *           Square bank avatar icon
     *     @type string $full_logo_uri
     *           Full size bank icon
     *     @type bool $supports_appless
     *           Works with appless payments
     *     @type bool $supports_information
     *           Connection allows for retrieval of information
     *     @type bool $requires_external_auth
     *           Connection requires external authorization for creating transfers
     *     @type bool $supports_send_payment
     *           Connection allows for payment initiation
     *     @type bool $supports_receive_payment
     *           Connection allows for receiving payments
     *     @type bool $requires_legacy_transfer
     *           Connection only supports immediate redemption of transfers
     *     @type string $provider
     *           Provider of the bank, e.g. Yodlee, FinApi, Token
     *     @type string $country
     *           The ISO 3166-1 alpha-2 two letter country code in upper case.
     *     @type string $identifier
     *           Optional identifier of the bank, not guaranteed to be unique across all banks. BLZ for German banks.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Bankinfo::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Square bank avatar icon
     *
     * Generated from protobuf field <code>string logo_uri = 3;</code>
     * @return string
     */
    public function getLogoUri()
    {
        return $this->logo_uri;
    }

    /**
     * Square bank avatar icon
     *
     * Generated from protobuf field <code>string logo_uri = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setLogoUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->logo_uri = $var;

        return $this;
    }

    /**
     * Full size bank icon
     *
     * Generated from protobuf field <code>string full_logo_uri = 4;</code>
     * @return string
     */
    public function getFullLogoUri()
    {
        return $this->full_logo_uri;
    }

    /**
     * Full size bank icon
     *
     * Generated from protobuf field <code>string full_logo_uri = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFullLogoUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->full_logo_uri = $var;

        return $this;
    }

    /**
     * Works with appless payments
     *
     * Generated from protobuf field <code>bool supports_appless = 5;</code>
     * @return bool
     */
    public function getSupportsAppless()
    {
        return $this->supports_appless;
    }

    /**
     * Works with appless payments
     *
     * Generated from protobuf field <code>bool supports_appless = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsAppless($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_appless = $var;

        return $this;
    }

    /**
     * Connection allows for retrieval of information
     *
     * Generated from protobuf field <code>bool supports_information = 7;</code>
     * @return bool
     */
    public function getSupportsInformation()
    {
        return $this->supports_information;
    }

    /**
     * Connection allows for retrieval of information
     *
     * Generated from protobuf field <code>bool supports_information = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsInformation($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_information = $var;

        return $this;
    }

    /**
     * Connection requires external authorization for creating transfers
     *
     * Generated from protobuf field <code>bool requires_external_auth = 8;</code>
     * @return bool
     */
    public function getRequiresExternalAuth()
    {
        return $this->requires_external_auth;
    }

    /**
     * Connection requires external authorization for creating transfers
     *
     * Generated from protobuf field <code>bool requires_external_auth = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequiresExternalAuth($var)
    {
        GPBUtil::checkBool($var);
        $this->requires_external_auth = $var;

        return $this;
    }

    /**
     * Connection allows for payment initiation
     *
     * Generated from protobuf field <code>bool supports_send_payment = 9;</code>
     * @return bool
     */
    public function getSupportsSendPayment()
    {
        return $this->supports_send_payment;
    }

    /**
     * Connection allows for payment initiation
     *
     * Generated from protobuf field <code>bool supports_send_payment = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsSendPayment($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_send_payment = $var;

        return $this;
    }

    /**
     * Connection allows for receiving payments
     *
     * Generated from protobuf field <code>bool supports_receive_payment = 10;</code>
     * @return bool
     */
    public function getSupportsReceivePayment()
    {
        return $this->supports_receive_payment;
    }

    /**
     * Connection allows for receiving payments
     *
     * Generated from protobuf field <code>bool supports_receive_payment = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsReceivePayment($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_receive_payment = $var;

        return $this;
    }

    /**
     * Connection only supports immediate redemption of transfers
     *
     * Generated from protobuf field <code>bool requires_legacy_transfer = 14;</code>
     * @return bool
     */
    public function getRequiresLegacyTransfer()
    {
        return $this->requires_legacy_transfer;
    }

    /**
     * Connection only supports immediate redemption of transfers
     *
     * Generated from protobuf field <code>bool requires_legacy_transfer = 14;</code>
     * @param bool $var
     * @return $this
     */
    public function setRequiresLegacyTransfer($var)
    {
        GPBUtil::checkBool($var);
        $this->requires_legacy_transfer = $var;

        return $this;
    }

    /**
     * Provider of the bank, e.g. Yodlee, FinApi, Token
     *
     * Generated from protobuf field <code>string provider = 11;</code>
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * Provider of the bank, e.g. Yodlee, FinApi, Token
     *
     * Generated from protobuf field <code>string provider = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * The ISO 3166-1 alpha-2 two letter country code in upper case.
     *
     * Generated from protobuf field <code>string country = 12;</code>
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * The ISO 3166-1 alpha-2 two letter country code in upper case.
     *
     * Generated from protobuf field <code>string country = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->country = $var;

        return $this;
    }

    /**
     * Optional identifier of the bank, not guaranteed to be unique across all banks. BLZ for German banks.
     *
     * Generated from protobuf field <code>string identifier = 13;</code>
     * @return string
     */
    public function getIdentifier()
    {
        return $this->identifier;
    }

    /**
     * Optional identifier of the bank, not guaranteed to be unique across all banks. BLZ for German banks.
     *
     * Generated from protobuf field <code>string identifier = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->identifier = $var;

        return $this;
    }

}

