<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: security.proto

namespace Io\Token\Proto\Common\Security;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents an encrypted message payload
 *
 * Generated from protobuf message <code>io.token.proto.common.security.SealedMessage</code>
 */
class SealedMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Base64url encoded ciphertext.
     *
     * Generated from protobuf field <code>string ciphertext = 1;</code>
     */
    private $ciphertext = '';
    protected $method;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ciphertext
     *           Base64url encoded ciphertext.
     *     @type \Io\Token\Proto\Common\Security\SealedMessage\NoopMethod $noop
     *           Noop encryption
     *     @type \Io\Token\Proto\Common\Security\SealedMessage\RsaMethod $rsa
     *           RSA blocks method
     *     @type \Io\Token\Proto\Common\Security\SealedMessage\RsaAesMethod $rsa_aes
     *           RSA/AES Method specific metadata
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Security::initOnce();
        parent::__construct($data);
    }

    /**
     * Base64url encoded ciphertext.
     *
     * Generated from protobuf field <code>string ciphertext = 1;</code>
     * @return string
     */
    public function getCiphertext()
    {
        return $this->ciphertext;
    }

    /**
     * Base64url encoded ciphertext.
     *
     * Generated from protobuf field <code>string ciphertext = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCiphertext($var)
    {
        GPBUtil::checkString($var, True);
        $this->ciphertext = $var;

        return $this;
    }

    /**
     * Noop encryption
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.NoopMethod noop = 4;</code>
     * @return \Io\Token\Proto\Common\Security\SealedMessage\NoopMethod
     */
    public function getNoop()
    {
        return $this->readOneof(4);
    }

    /**
     * Noop encryption
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.NoopMethod noop = 4;</code>
     * @param \Io\Token\Proto\Common\Security\SealedMessage\NoopMethod $var
     * @return $this
     */
    public function setNoop($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Security\SealedMessage_NoopMethod::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * RSA blocks method
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.RsaMethod rsa = 6;</code>
     * @return \Io\Token\Proto\Common\Security\SealedMessage\RsaMethod
     */
    public function getRsa()
    {
        return $this->readOneof(6);
    }

    /**
     * RSA blocks method
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.RsaMethod rsa = 6;</code>
     * @param \Io\Token\Proto\Common\Security\SealedMessage\RsaMethod $var
     * @return $this
     */
    public function setRsa($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Security\SealedMessage_RsaMethod::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * RSA/AES Method specific metadata
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.RsaAesMethod rsa_aes = 7;</code>
     * @return \Io\Token\Proto\Common\Security\SealedMessage\RsaAesMethod
     */
    public function getRsaAes()
    {
        return $this->readOneof(7);
    }

    /**
     * RSA/AES Method specific metadata
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.SealedMessage.RsaAesMethod rsa_aes = 7;</code>
     * @param \Io\Token\Proto\Common\Security\SealedMessage\RsaAesMethod $var
     * @return $this
     */
    public function setRsaAes($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Security\SealedMessage_RsaAesMethod::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getMethod()
    {
        return $this->whichOneof("method");
    }

}

