<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gateway/gateway.proto

namespace Io\Token\Proto\Gateway;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.gateway.CreateMemberRequest</code>
 */
class CreateMemberRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * random string; used only to de-duplicate requests.
     *
     * Generated from protobuf field <code>string nonce = 1;</code>
     */
    private $nonce = '';
    /**
     * Generated from protobuf field <code>.io.token.proto.common.member.CreateMemberType member_type = 2;</code>
     */
    private $member_type = 0;
    /**
     * Optional token request ID, if set the member will be claimed by the TPP initiating the token request.
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     */
    private $token_request_id = '';
    /**
     * Generated from protobuf field <code>string partner_id = 4;</code>
     */
    private $partner_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $nonce
     *           random string; used only to de-duplicate requests.
     *     @type int $member_type
     *     @type string $token_request_id
     *           Optional token request ID, if set the member will be claimed by the TPP initiating the token request.
     *     @type string $partner_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gateway\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * random string; used only to de-duplicate requests.
     *
     * Generated from protobuf field <code>string nonce = 1;</code>
     * @return string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * random string; used only to de-duplicate requests.
     *
     * Generated from protobuf field <code>string nonce = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkString($var, True);
        $this->nonce = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.member.CreateMemberType member_type = 2;</code>
     * @return int
     */
    public function getMemberType()
    {
        return $this->member_type;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.member.CreateMemberType member_type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMemberType($var)
    {
        GPBUtil::checkEnum($var, \Io\Token\Proto\Common\Member\CreateMemberType::class);
        $this->member_type = $var;

        return $this;
    }

    /**
     * Optional token request ID, if set the member will be claimed by the TPP initiating the token request.
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     * @return string
     */
    public function getTokenRequestId()
    {
        return $this->token_request_id;
    }

    /**
     * Optional token request ID, if set the member will be claimed by the TPP initiating the token request.
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTokenRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->token_request_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string partner_id = 4;</code>
     * @return string
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * Generated from protobuf field <code>string partner_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;

        return $this;
    }

}

