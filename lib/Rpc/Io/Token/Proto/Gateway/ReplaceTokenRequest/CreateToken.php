<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gateway/gateway.proto

namespace Io\Token\Proto\Gateway\ReplaceTokenRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.gateway.ReplaceTokenRequest.CreateToken</code>
 */
class CreateToken extends \Google\Protobuf\Internal\Message
{
    /**
     * New token payload
     *
     * Generated from protobuf field <code>.io.token.proto.common.token.TokenPayload payload = 1;</code>
     */
    private $payload = null;
    /**
     * Optional if endorsement requested.
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.Signature payload_signature = 2;</code>
     */
    private $payload_signature = null;
    /**
     * Optional token request ID
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     */
    private $token_request_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Token\Proto\Common\Token\TokenPayload $payload
     *           New token payload
     *     @type \Io\Token\Proto\Common\Security\Signature $payload_signature
     *           Optional if endorsement requested.
     *     @type string $token_request_id
     *           Optional token request ID
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gateway\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * New token payload
     *
     * Generated from protobuf field <code>.io.token.proto.common.token.TokenPayload payload = 1;</code>
     * @return \Io\Token\Proto\Common\Token\TokenPayload
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * New token payload
     *
     * Generated from protobuf field <code>.io.token.proto.common.token.TokenPayload payload = 1;</code>
     * @param \Io\Token\Proto\Common\Token\TokenPayload $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Token\TokenPayload::class);
        $this->payload = $var;

        return $this;
    }

    /**
     * Optional if endorsement requested.
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.Signature payload_signature = 2;</code>
     * @return \Io\Token\Proto\Common\Security\Signature
     */
    public function getPayloadSignature()
    {
        return $this->payload_signature;
    }

    /**
     * Optional if endorsement requested.
     *
     * Generated from protobuf field <code>.io.token.proto.common.security.Signature payload_signature = 2;</code>
     * @param \Io\Token\Proto\Common\Security\Signature $var
     * @return $this
     */
    public function setPayloadSignature($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Security\Signature::class);
        $this->payload_signature = $var;

        return $this;
    }

    /**
     * Optional token request ID
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     * @return string
     */
    public function getTokenRequestId()
    {
        return $this->token_request_id;
    }

    /**
     * Optional token request ID
     *
     * Generated from protobuf field <code>string token_request_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTokenRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->token_request_id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreateToken::class, \Io\Token\Proto\Gateway\ReplaceTokenRequest_CreateToken::class);

