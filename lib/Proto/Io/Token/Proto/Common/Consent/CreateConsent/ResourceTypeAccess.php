<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consent.proto

namespace Io\Token\Proto\Common\Consent\CreateConsent;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.consent.CreateConsent.ResourceTypeAccess</code>
 */
class ResourceTypeAccess extends \Google\Protobuf\Internal\Message
{
    /**
     * bank account identifiers (opaque to Token)
     *
     * Generated from protobuf field <code>repeated string account_identifiers = 1;</code>
     */
    private $account_identifiers;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $account_identifiers
     *           bank account identifiers (opaque to Token)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Consent::initOnce();
        parent::__construct($data);
    }

    /**
     * bank account identifiers (opaque to Token)
     *
     * Generated from protobuf field <code>repeated string account_identifiers = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccountIdentifiers()
    {
        return $this->account_identifiers;
    }

    /**
     * bank account identifiers (opaque to Token)
     *
     * Generated from protobuf field <code>repeated string account_identifiers = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccountIdentifiers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->account_identifiers = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ResourceTypeAccess::class, \Io\Token\Proto\Common\Consent\CreateConsent_ResourceTypeAccess::class);

