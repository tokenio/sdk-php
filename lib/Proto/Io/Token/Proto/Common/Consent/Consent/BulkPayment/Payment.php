<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consent.proto

namespace Io\Token\Proto\Common\Consent\Consent\BulkPayment;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.consent.Consent.BulkPayment.Payment</code>
 */
class Payment extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string amount = 1;</code>
     */
    private $amount = '';
    /**
     * Generated from protobuf field <code>string currency = 2;</code>
     */
    private $currency = '';
    /**
     * Generated from protobuf field <code>string ref_id = 3;</code>
     */
    private $ref_id = '';
    /**
     * Generated from protobuf field <code>string description = 4;</code>
     */
    private $description = '';
    /**
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.TransferDestination destination = 5;</code>
     */
    private $destination = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $amount
     *     @type string $currency
     *     @type string $ref_id
     *     @type string $description
     *     @type \Io\Token\Proto\Common\Transferinstructions\TransferDestination $destination
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Consent::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string amount = 1;</code>
     * @return string
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     * Generated from protobuf field <code>string amount = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkString($var, True);
        $this->amount = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string currency = 2;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Generated from protobuf field <code>string currency = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string ref_id = 3;</code>
     * @return string
     */
    public function getRefId()
    {
        return $this->ref_id;
    }

    /**
     * Generated from protobuf field <code>string ref_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRefId($var)
    {
        GPBUtil::checkString($var, True);
        $this->ref_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 4;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.TransferDestination destination = 5;</code>
     * @return \Io\Token\Proto\Common\Transferinstructions\TransferDestination
     */
    public function getDestination()
    {
        return $this->destination;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.TransferDestination destination = 5;</code>
     * @param \Io\Token\Proto\Common\Transferinstructions\TransferDestination $var
     * @return $this
     */
    public function setDestination($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Transferinstructions\TransferDestination::class);
        $this->destination = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Payment::class, \Io\Token\Proto\Common\Consent\Consent_BulkPayment_Payment::class);

