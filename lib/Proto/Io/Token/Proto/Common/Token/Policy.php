<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: token.proto

namespace Io\Token\Proto\Common\Token;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.token.Policy</code>
 */
class Policy extends \Google\Protobuf\Internal\Message
{
    protected $policy;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Token\Proto\Common\Token\Policy\SingleSignature $single_signature
     *     @type \Io\Token\Proto\Common\Token\Policy\AllSignatures $all_signatures
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Token::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.token.Policy.SingleSignature single_signature = 1;</code>
     * @return \Io\Token\Proto\Common\Token\Policy\SingleSignature
     */
    public function getSingleSignature()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.token.Policy.SingleSignature single_signature = 1;</code>
     * @param \Io\Token\Proto\Common\Token\Policy\SingleSignature $var
     * @return $this
     */
    public function setSingleSignature($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Token\Policy_SingleSignature::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.token.Policy.AllSignatures all_signatures = 2;</code>
     * @return \Io\Token\Proto\Common\Token\Policy\AllSignatures
     */
    public function getAllSignatures()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.token.Policy.AllSignatures all_signatures = 2;</code>
     * @param \Io\Token\Proto\Common\Token\Policy\AllSignatures $var
     * @return $this
     */
    public function setAllSignatures($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Token\Policy_AllSignatures::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getPolicy()
    {
        return $this->whichOneof("policy");
    }

}

