<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eidas.proto

namespace Io\Token\Proto\Common\Eidas;

/**
 * When a TPP verifies an eIDAS alias by providing a certificate (and all preconditions are met on
 * our side) the verification may succeed or fail on the verification service side in two different
 * ways: certificate is invalid or an error response from the service
 *
 * Protobuf type <code>io.token.proto.common.eidas.KonsentusVerificationStatus</code>
 */
class KonsentusVerificationStatus
{
    /**
     * Generated from protobuf enum <code>INVALID = 0;</code>
     */
    const INVALID = 0;
    /**
     * Generated from protobuf enum <code>SUCCESS = 1;</code>
     */
    const SUCCESS = 1;
    /**
     * The request has succeeded (code 200), but at least one eIDAS.validity field in the response body is false
     *
     * Generated from protobuf enum <code>FAILURE_EIDAS_INVALID = 2;</code>
     */
    const FAILURE_EIDAS_INVALID = 2;
    /**
     * Konsentus returned an error response (codes 4xx and 5xx)
     *
     * Generated from protobuf enum <code>FAILURE_ERROR_RESPONSE = 3;</code>
     */
    const FAILURE_ERROR_RESPONSE = 3;
    /**
     * an error happened during the verification process
     *
     * Generated from protobuf enum <code>FAILURE_ERROR = 4;</code>
     */
    const FAILURE_ERROR = 4;
    /**
     * certificate validation has not finished yet, use getEidasVerificationStatus() to get the result later
     *
     * Generated from protobuf enum <code>IN_PROGRESS = 5;</code>
     */
    const IN_PROGRESS = 5;
}

