<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: member.proto

namespace Io\Token\Proto\Common\Member;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A member record that is computed by replaying all the member updates.
 *
 * Generated from protobuf message <code>io.token.proto.common.member.Member</code>
 */
class Member extends \Google\Protobuf\Internal\Message
{
    /**
     * member ID
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    private $id = '';
    /**
     * last hash; used with UpdateMember
     *
     * Generated from protobuf field <code>string last_hash = 2;</code>
     */
    private $last_hash = '';
    /**
     * hashes of verified aliases
     *
     * Generated from protobuf field <code>repeated string alias_hashes = 3;</code>
     */
    private $alias_hashes;
    /**
     * public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key keys = 4;</code>
     */
    private $keys;
    /**
     * hashes of unverified aliases
     *
     * Generated from protobuf field <code>repeated string unverified_alias_hashes = 5;</code>
     */
    private $unverified_alias_hashes;
    /**
     * recovery rule
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.RecoveryRule recovery_rule = 6;</code>
     */
    private $recovery_rule = null;
    /**
     * sequence number for member's last recovery entry
     *
     * Generated from protobuf field <code>int32 last_recovery_sequence = 7;</code>
     */
    private $last_recovery_sequence = 0;
    /**
     * sequence number for member's last operation
     *
     * Generated from protobuf field <code>int32 last_operation_sequence = 8;</code>
     */
    private $last_operation_sequence = 0;
    /**
     * type of member
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.Member.MemberType type = 9;</code>
     */
    private $type = 0;
    /**
     * affiliated partner id
     *
     * Generated from protobuf field <code>string partner_id = 10;</code>
     */
    private $partner_id = '';
    /**
     * indicates if member is verified partner
     *
     * Generated from protobuf field <code>bool is_verified_partner = 11;</code>
     */
    private $is_verified_partner = false;
    /**
     * realm owner member id
     *
     * Generated from protobuf field <code>string realm_id = 12;</code>
     */
    private $realm_id = '';
    /**
     * realm permissions assigned; Used to verify MemberOperations that this member can perform as realm owner.
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.member.RealmPermission realm_permissions = 13;</code>
     */
    private $realm_permissions;
    /**
     * expired public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key expiredKeys = 14;</code>
     */
    private $expiredKeys;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           member ID
     *     @type string $last_hash
     *           last hash; used with UpdateMember
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $alias_hashes
     *           hashes of verified aliases
     *     @type \Io\Token\Proto\Common\Security\Key[]|\Google\Protobuf\Internal\RepeatedField $keys
     *           public keys
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $unverified_alias_hashes
     *           hashes of unverified aliases
     *     @type \Io\Token\Proto\Common\Member\RecoveryRule $recovery_rule
     *           recovery rule
     *     @type int $last_recovery_sequence
     *           sequence number for member's last recovery entry
     *     @type int $last_operation_sequence
     *           sequence number for member's last operation
     *     @type int $type
     *           type of member
     *     @type string $partner_id
     *           affiliated partner id
     *     @type bool $is_verified_partner
     *           indicates if member is verified partner
     *     @type string $realm_id
     *           realm owner member id
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $realm_permissions
     *           realm permissions assigned; Used to verify MemberOperations that this member can perform as realm owner.
     *     @type \Io\Token\Proto\Common\Security\Key[]|\Google\Protobuf\Internal\RepeatedField $expiredKeys
     *           expired public keys
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Member::initOnce();
        parent::__construct($data);
    }

    /**
     * member ID
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * member ID
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * last hash; used with UpdateMember
     *
     * Generated from protobuf field <code>string last_hash = 2;</code>
     * @return string
     */
    public function getLastHash()
    {
        return $this->last_hash;
    }

    /**
     * last hash; used with UpdateMember
     *
     * Generated from protobuf field <code>string last_hash = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLastHash($var)
    {
        GPBUtil::checkString($var, True);
        $this->last_hash = $var;

        return $this;
    }

    /**
     * hashes of verified aliases
     *
     * Generated from protobuf field <code>repeated string alias_hashes = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAliasHashes()
    {
        return $this->alias_hashes;
    }

    /**
     * hashes of verified aliases
     *
     * Generated from protobuf field <code>repeated string alias_hashes = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAliasHashes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->alias_hashes = $arr;

        return $this;
    }

    /**
     * public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key keys = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getKeys()
    {
        return $this->keys;
    }

    /**
     * public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key keys = 4;</code>
     * @param \Io\Token\Proto\Common\Security\Key[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\Token\Proto\Common\Security\Key::class);
        $this->keys = $arr;

        return $this;
    }

    /**
     * hashes of unverified aliases
     *
     * Generated from protobuf field <code>repeated string unverified_alias_hashes = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUnverifiedAliasHashes()
    {
        return $this->unverified_alias_hashes;
    }

    /**
     * hashes of unverified aliases
     *
     * Generated from protobuf field <code>repeated string unverified_alias_hashes = 5;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUnverifiedAliasHashes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->unverified_alias_hashes = $arr;

        return $this;
    }

    /**
     * recovery rule
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.RecoveryRule recovery_rule = 6;</code>
     * @return \Io\Token\Proto\Common\Member\RecoveryRule
     */
    public function getRecoveryRule()
    {
        return $this->recovery_rule;
    }

    /**
     * recovery rule
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.RecoveryRule recovery_rule = 6;</code>
     * @param \Io\Token\Proto\Common\Member\RecoveryRule $var
     * @return $this
     */
    public function setRecoveryRule($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Member\RecoveryRule::class);
        $this->recovery_rule = $var;

        return $this;
    }

    /**
     * sequence number for member's last recovery entry
     *
     * Generated from protobuf field <code>int32 last_recovery_sequence = 7;</code>
     * @return int
     */
    public function getLastRecoverySequence()
    {
        return $this->last_recovery_sequence;
    }

    /**
     * sequence number for member's last recovery entry
     *
     * Generated from protobuf field <code>int32 last_recovery_sequence = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setLastRecoverySequence($var)
    {
        GPBUtil::checkInt32($var);
        $this->last_recovery_sequence = $var;

        return $this;
    }

    /**
     * sequence number for member's last operation
     *
     * Generated from protobuf field <code>int32 last_operation_sequence = 8;</code>
     * @return int
     */
    public function getLastOperationSequence()
    {
        return $this->last_operation_sequence;
    }

    /**
     * sequence number for member's last operation
     *
     * Generated from protobuf field <code>int32 last_operation_sequence = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setLastOperationSequence($var)
    {
        GPBUtil::checkInt32($var);
        $this->last_operation_sequence = $var;

        return $this;
    }

    /**
     * type of member
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.Member.MemberType type = 9;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * type of member
     *
     * Generated from protobuf field <code>.io.token.proto.common.member.Member.MemberType type = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Io\Token\Proto\Common\Member\Member_MemberType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * affiliated partner id
     *
     * Generated from protobuf field <code>string partner_id = 10;</code>
     * @return string
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * affiliated partner id
     *
     * Generated from protobuf field <code>string partner_id = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;

        return $this;
    }

    /**
     * indicates if member is verified partner
     *
     * Generated from protobuf field <code>bool is_verified_partner = 11;</code>
     * @return bool
     */
    public function getIsVerifiedPartner()
    {
        return $this->is_verified_partner;
    }

    /**
     * indicates if member is verified partner
     *
     * Generated from protobuf field <code>bool is_verified_partner = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsVerifiedPartner($var)
    {
        GPBUtil::checkBool($var);
        $this->is_verified_partner = $var;

        return $this;
    }

    /**
     * realm owner member id
     *
     * Generated from protobuf field <code>string realm_id = 12;</code>
     * @return string
     */
    public function getRealmId()
    {
        return $this->realm_id;
    }

    /**
     * realm owner member id
     *
     * Generated from protobuf field <code>string realm_id = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setRealmId($var)
    {
        GPBUtil::checkString($var, True);
        $this->realm_id = $var;

        return $this;
    }

    /**
     * realm permissions assigned; Used to verify MemberOperations that this member can perform as realm owner.
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.member.RealmPermission realm_permissions = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRealmPermissions()
    {
        return $this->realm_permissions;
    }

    /**
     * realm permissions assigned; Used to verify MemberOperations that this member can perform as realm owner.
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.member.RealmPermission realm_permissions = 13;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRealmPermissions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Io\Token\Proto\Common\Member\RealmPermission::class);
        $this->realm_permissions = $arr;

        return $this;
    }

    /**
     * expired public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key expiredKeys = 14;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExpiredKeys()
    {
        return $this->expiredKeys;
    }

    /**
     * expired public keys
     *
     * Generated from protobuf field <code>repeated .io.token.proto.common.security.Key expiredKeys = 14;</code>
     * @param \Io\Token\Proto\Common\Security\Key[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExpiredKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Io\Token\Proto\Common\Security\Key::class);
        $this->expiredKeys = $arr;

        return $this;
    }

}

