<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transferinstructions.proto

namespace Io\Token\Proto\Common\Transferinstructions\TransferInstructions;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.transferinstructions.TransferInstructions.Metadata</code>
 */
class Metadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Purpose of payment
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PurposeOfPayment transfer_purpose = 1;</code>
     */
    private $transfer_purpose = 0;
    /**
     * Optional payment context
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PaymentContext payment_context = 2;</code>
     */
    private $payment_context = 0;
    /**
     * Optional ISO 18245 Merchant Category Code (MCC)
     *
     * Generated from protobuf field <code>string merchant_category_code = 3;</code>
     */
    private $merchant_category_code = '';
    /**
     * Optional Unique merchant customer identifier
     *
     * Generated from protobuf field <code>string merchant_customer_id = 4;</code>
     */
    private $merchant_customer_id = '';
    /**
     * Optional delivery address
     *
     * Generated from protobuf field <code>.io.token.proto.common.address.Address delivery_address = 5;</code>
     */
    private $delivery_address = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $transfer_purpose
     *           Purpose of payment
     *     @type int $payment_context
     *           Optional payment context
     *     @type string $merchant_category_code
     *           Optional ISO 18245 Merchant Category Code (MCC)
     *     @type string $merchant_customer_id
     *           Optional Unique merchant customer identifier
     *     @type \Io\Token\Proto\Common\Address\Address $delivery_address
     *           Optional delivery address
     * }
     */
    public function __construct($data = NULL) {
        \Io\Token\GPBMetadata\Transferinstructions::initOnce();
        parent::__construct($data);
    }

    /**
     * Purpose of payment
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PurposeOfPayment transfer_purpose = 1;</code>
     * @return int
     */
    public function getTransferPurpose()
    {
        return $this->transfer_purpose;
    }

    /**
     * Purpose of payment
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PurposeOfPayment transfer_purpose = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setTransferPurpose($var)
    {
        GPBUtil::checkEnum($var, \Io\Token\Proto\Common\Transferinstructions\PurposeOfPayment::class);
        $this->transfer_purpose = $var;

        return $this;
    }

    /**
     * Optional payment context
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PaymentContext payment_context = 2;</code>
     * @return int
     */
    public function getPaymentContext()
    {
        return $this->payment_context;
    }

    /**
     * Optional payment context
     *
     * Generated from protobuf field <code>.io.token.proto.common.transferinstructions.PaymentContext payment_context = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPaymentContext($var)
    {
        GPBUtil::checkEnum($var, \Io\Token\Proto\Common\Transferinstructions\PaymentContext::class);
        $this->payment_context = $var;

        return $this;
    }

    /**
     * Optional ISO 18245 Merchant Category Code (MCC)
     *
     * Generated from protobuf field <code>string merchant_category_code = 3;</code>
     * @return string
     */
    public function getMerchantCategoryCode()
    {
        return $this->merchant_category_code;
    }

    /**
     * Optional ISO 18245 Merchant Category Code (MCC)
     *
     * Generated from protobuf field <code>string merchant_category_code = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setMerchantCategoryCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->merchant_category_code = $var;

        return $this;
    }

    /**
     * Optional Unique merchant customer identifier
     *
     * Generated from protobuf field <code>string merchant_customer_id = 4;</code>
     * @return string
     */
    public function getMerchantCustomerId()
    {
        return $this->merchant_customer_id;
    }

    /**
     * Optional Unique merchant customer identifier
     *
     * Generated from protobuf field <code>string merchant_customer_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setMerchantCustomerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->merchant_customer_id = $var;

        return $this;
    }

    /**
     * Optional delivery address
     *
     * Generated from protobuf field <code>.io.token.proto.common.address.Address delivery_address = 5;</code>
     * @return \Io\Token\Proto\Common\Address\Address
     */
    public function getDeliveryAddress()
    {
        return $this->delivery_address;
    }

    /**
     * Optional delivery address
     *
     * Generated from protobuf field <code>.io.token.proto.common.address.Address delivery_address = 5;</code>
     * @param \Io\Token\Proto\Common\Address\Address $var
     * @return $this
     */
    public function setDeliveryAddress($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Address\Address::class);
        $this->delivery_address = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Metadata::class, \Io\Token\Proto\Common\Transferinstructions\TransferInstructions_Metadata::class);

