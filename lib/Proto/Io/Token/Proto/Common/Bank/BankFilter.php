<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bankinfo.proto

namespace Io\Token\Proto\Common\Bank;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.common.bank.BankFilter</code>
 */
class BankFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * (Optional) Filter for banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     */
    private $provider = '';
    /**
     * (Optional) Filter for banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 2;</code>
     */
    private $tpp_id = '';
    /**
     * (Optional) Filter for banks that support sending to the destination country
     *
     * Generated from protobuf field <code>string destination_country = 3;</code>
     */
    private $destination_country = '';
    /**
     * (Optional) Filter for banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 4;</code>
     */
    private $country = '';
    /**
     * (Optional) Filter for banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 5;</code>
     */
    private $ids;
    /**
     * (Optional) Filter for banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 6;</code>
     */
    private $search = '';
    /**
     * (Optional) Filter for banks that support or don't support certain features. See Bank for the feature keys we support.
     * Set "true" for banks that support the feature or "false" for banks that don't support the feature.
     * e.g. ["supports_linking_uri": "true"] means only banks who supports the linking uri feature.
     *
     * Generated from protobuf field <code>map<string, string> requires_bank_features = 7;</code>
     */
    private $requires_bank_features;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $provider
     *           (Optional) Filter for banks whose 'provider' matches the provider (case-insensitive)
     *     @type string $tpp_id
     *           (Optional) Filter for banks which are integrated with the TPP
     *     @type string $destination_country
     *           (Optional) Filter for banks that support sending to the destination country
     *     @type string $country
     *           (Optional) Filter for banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $ids
     *           (Optional) Filter for banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *     @type string $search
     *           (Optional) Filter for banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *     @type array|\Google\Protobuf\Internal\MapField $requires_bank_features
     *           (Optional) Filter for banks that support or don't support certain features. See Bank for the feature keys we support.
     *           Set "true" for banks that support the feature or "false" for banks that don't support the feature.
     *           e.g. ["supports_linking_uri": "true"] means only banks who supports the linking uri feature.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Bankinfo::initOnce();
        parent::__construct($data);
    }

    /**
     * (Optional) Filter for banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * (Optional) Filter for banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 2;</code>
     * @return string
     */
    public function getTppId()
    {
        return $this->tpp_id;
    }

    /**
     * (Optional) Filter for banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tpp_id = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks that support sending to the destination country
     *
     * Generated from protobuf field <code>string destination_country = 3;</code>
     * @return string
     */
    public function getDestinationCountry()
    {
        return $this->destination_country;
    }

    /**
     * (Optional) Filter for banks that support sending to the destination country
     *
     * Generated from protobuf field <code>string destination_country = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDestinationCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->destination_country = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 4;</code>
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * (Optional) Filter for banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->country = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIds()
    {
        return $this->ids;
    }

    /**
     * (Optional) Filter for banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 5;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->ids = $arr;

        return $this;
    }

    /**
     * (Optional) Filter for banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 6;</code>
     * @return string
     */
    public function getSearch()
    {
        return $this->search;
    }

    /**
     * (Optional) Filter for banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSearch($var)
    {
        GPBUtil::checkString($var, True);
        $this->search = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks that support or don't support certain features. See Bank for the feature keys we support.
     * Set "true" for banks that support the feature or "false" for banks that don't support the feature.
     * e.g. ["supports_linking_uri": "true"] means only banks who supports the linking uri feature.
     *
     * Generated from protobuf field <code>map<string, string> requires_bank_features = 7;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getRequiresBankFeatures()
    {
        return $this->requires_bank_features;
    }

    /**
     * (Optional) Filter for banks that support or don't support certain features. See Bank for the feature keys we support.
     * Set "true" for banks that support the feature or "false" for banks that don't support the feature.
     * e.g. ["supports_linking_uri": "true"] means only banks who supports the linking uri feature.
     *
     * Generated from protobuf field <code>map<string, string> requires_bank_features = 7;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setRequiresBankFeatures($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->requires_bank_features = $arr;

        return $this;
    }

}

