<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gateway/gateway.proto

namespace Io\Token\Proto\Gateway;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.gateway.RegisterWithEidasRequest</code>
 */
class RegisterWithEidasRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * payload with a certificate
     *
     * Generated from protobuf field <code>.io.token.proto.common.eidas.RegisterWithEidasPayload payload = 1;</code>
     */
    private $payload = null;
    /**
     * signature of payload signed with the private key of the certificate
     *
     * Generated from protobuf field <code>string signature = 2;</code>
     */
    private $signature = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Token\Proto\Common\Eidas\RegisterWithEidasPayload $payload
     *           payload with a certificate
     *     @type string $signature
     *           signature of payload signed with the private key of the certificate
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gateway\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * payload with a certificate
     *
     * Generated from protobuf field <code>.io.token.proto.common.eidas.RegisterWithEidasPayload payload = 1;</code>
     * @return \Io\Token\Proto\Common\Eidas\RegisterWithEidasPayload
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * payload with a certificate
     *
     * Generated from protobuf field <code>.io.token.proto.common.eidas.RegisterWithEidasPayload payload = 1;</code>
     * @param \Io\Token\Proto\Common\Eidas\RegisterWithEidasPayload $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Eidas\RegisterWithEidasPayload::class);
        $this->payload = $var;

        return $this;
    }

    /**
     * signature of payload signed with the private key of the certificate
     *
     * Generated from protobuf field <code>string signature = 2;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * signature of payload signed with the private key of the certificate
     *
     * Generated from protobuf field <code>string signature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, True);
        $this->signature = $var;

        return $this;
    }

}

