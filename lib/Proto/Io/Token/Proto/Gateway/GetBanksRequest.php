<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gateway/gateway.proto

namespace Io\Token\Proto\Gateway;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>io.token.proto.gateway.GetBanksRequest</code>
 */
class GetBanksRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * DEPRECATED. Use fields below. (Optional) Filter by criteria in bank filter. Results must match all filter criteria.
     *
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFilter filter = 9 [deprecated = true];</code>
     */
    private $filter = null;
    /**
     * Paging
     *
     * Generated from protobuf field <code>int32 page = 4;</code>
     */
    private $page = 0;
    /**
     * Maximum number of records per page. Can be at most 200. Defaults to 200 if not specified.
     *
     * Generated from protobuf field <code>int32 per_page = 5;</code>
     */
    private $per_page = 0;
    /**
     * The key to sort the results. Could be one of: name, provider and country. Defaults to name if not specified.
     *
     * Generated from protobuf field <code>string sort = 6;</code>
     */
    private $sort = '';
    /**
     * (Optional) If specified with a TSP member_id, return the banks which the member is configured with.
     *
     * Generated from protobuf field <code>string member_id = 15;</code>
     */
    private $member_id = '';
    /**
     * DEPRECATED. Use countries instead. If specified, return banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 3 [deprecated = true];</code>
     */
    private $country = '';
    /**
     * If specified, return banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 1;</code>
     */
    private $ids;
    /**
     * If specified, return banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 2;</code>
     */
    private $search = '';
    /**
     * DEPRECATED. Use providers instead. (Optional) If specified, return banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 7 [deprecated = true];</code>
     */
    private $provider = '';
    /**
     * (Optional) If specified, return banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 8;</code>
     */
    private $tpp_id = '';
    /**
     * DEPRECATED. Use countries instead. (Optional) Filter for banks that support sending to the destination country.
     *
     * Generated from protobuf field <code>string destination_country = 10 [deprecated = true];</code>
     */
    private $destination_country = '';
    /**
     * (Optional) Filter for banks whose 'provider' matches the providers (case-insensitive)
     *
     * Generated from protobuf field <code>repeated string providers = 11;</code>
     */
    private $providers;
    /**
     * (Optional) Filter for banks whose bank code matches the given value (BLZ for German banks only)
     *
     * Generated from protobuf field <code>string bank_code = 12;</code>
     */
    private $bank_code = '';
    /**
     * Generated from protobuf field <code>repeated string countries = 13;</code>
     */
    private $countries;
    /**
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFeatures bank_features = 14;</code>
     */
    private $bank_features = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Io\Token\Proto\Common\Bank\BankFilter $filter
     *           DEPRECATED. Use fields below. (Optional) Filter by criteria in bank filter. Results must match all filter criteria.
     *     @type int $page
     *           Paging
     *     @type int $per_page
     *           Maximum number of records per page. Can be at most 200. Defaults to 200 if not specified.
     *     @type string $sort
     *           The key to sort the results. Could be one of: name, provider and country. Defaults to name if not specified.
     *     @type string $member_id
     *           (Optional) If specified with a TSP member_id, return the banks which the member is configured with.
     *     @type string $country
     *           DEPRECATED. Use countries instead. If specified, return banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $ids
     *           If specified, return banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *     @type string $search
     *           If specified, return banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *     @type string $provider
     *           DEPRECATED. Use providers instead. (Optional) If specified, return banks whose 'provider' matches the provider (case-insensitive)
     *     @type string $tpp_id
     *           (Optional) If specified, return banks which are integrated with the TPP
     *     @type string $destination_country
     *           DEPRECATED. Use countries instead. (Optional) Filter for banks that support sending to the destination country.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $providers
     *           (Optional) Filter for banks whose 'provider' matches the providers (case-insensitive)
     *     @type string $bank_code
     *           (Optional) Filter for banks whose bank code matches the given value (BLZ for German banks only)
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $countries
     *     @type \Io\Token\Proto\Common\Bank\BankFeatures $bank_features
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gateway\Gateway::initOnce();
        parent::__construct($data);
    }

    /**
     * DEPRECATED. Use fields below. (Optional) Filter by criteria in bank filter. Results must match all filter criteria.
     *
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFilter filter = 9 [deprecated = true];</code>
     * @return \Io\Token\Proto\Common\Bank\BankFilter
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * DEPRECATED. Use fields below. (Optional) Filter by criteria in bank filter. Results must match all filter criteria.
     *
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFilter filter = 9 [deprecated = true];</code>
     * @param \Io\Token\Proto\Common\Bank\BankFilter $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Bank\BankFilter::class);
        $this->filter = $var;

        return $this;
    }

    /**
     * Paging
     *
     * Generated from protobuf field <code>int32 page = 4;</code>
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }

    /**
     * Paging
     *
     * Generated from protobuf field <code>int32 page = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setPage($var)
    {
        GPBUtil::checkInt32($var);
        $this->page = $var;

        return $this;
    }

    /**
     * Maximum number of records per page. Can be at most 200. Defaults to 200 if not specified.
     *
     * Generated from protobuf field <code>int32 per_page = 5;</code>
     * @return int
     */
    public function getPerPage()
    {
        return $this->per_page;
    }

    /**
     * Maximum number of records per page. Can be at most 200. Defaults to 200 if not specified.
     *
     * Generated from protobuf field <code>int32 per_page = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setPerPage($var)
    {
        GPBUtil::checkInt32($var);
        $this->per_page = $var;

        return $this;
    }

    /**
     * The key to sort the results. Could be one of: name, provider and country. Defaults to name if not specified.
     *
     * Generated from protobuf field <code>string sort = 6;</code>
     * @return string
     */
    public function getSort()
    {
        return $this->sort;
    }

    /**
     * The key to sort the results. Could be one of: name, provider and country. Defaults to name if not specified.
     *
     * Generated from protobuf field <code>string sort = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, True);
        $this->sort = $var;

        return $this;
    }

    /**
     * (Optional) If specified with a TSP member_id, return the banks which the member is configured with.
     *
     * Generated from protobuf field <code>string member_id = 15;</code>
     * @return string
     */
    public function getMemberId()
    {
        return $this->member_id;
    }

    /**
     * (Optional) If specified with a TSP member_id, return the banks which the member is configured with.
     *
     * Generated from protobuf field <code>string member_id = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setMemberId($var)
    {
        GPBUtil::checkString($var, True);
        $this->member_id = $var;

        return $this;
    }

    /**
     * DEPRECATED. Use countries instead. If specified, return banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 3 [deprecated = true];</code>
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * DEPRECATED. Use countries instead. If specified, return banks whose 'country' matches the given ISO 3166-1 alpha-2 country code (case-insensitive)
     *
     * Generated from protobuf field <code>string country = 3 [deprecated = true];</code>
     * @param string $var
     * @return $this
     */
    public function setCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->country = $var;

        return $this;
    }

    /**
     * If specified, return banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIds()
    {
        return $this->ids;
    }

    /**
     * If specified, return banks whose 'id' matches any one of the given ids (case-insensitive). Can be at most 1000.
     *
     * Generated from protobuf field <code>repeated string ids = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->ids = $arr;

        return $this;
    }

    /**
     * If specified, return banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 2;</code>
     * @return string
     */
    public function getSearch()
    {
        return $this->search;
    }

    /**
     * If specified, return banks whose 'name' or 'identifier' contains the given search string (case-insensitive)
     *
     * Generated from protobuf field <code>string search = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSearch($var)
    {
        GPBUtil::checkString($var, True);
        $this->search = $var;

        return $this;
    }

    /**
     * DEPRECATED. Use providers instead. (Optional) If specified, return banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 7 [deprecated = true];</code>
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * DEPRECATED. Use providers instead. (Optional) If specified, return banks whose 'provider' matches the provider (case-insensitive)
     *
     * Generated from protobuf field <code>string provider = 7 [deprecated = true];</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * (Optional) If specified, return banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 8;</code>
     * @return string
     */
    public function getTppId()
    {
        return $this->tpp_id;
    }

    /**
     * (Optional) If specified, return banks which are integrated with the TPP
     *
     * Generated from protobuf field <code>string tpp_id = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setTppId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tpp_id = $var;

        return $this;
    }

    /**
     * DEPRECATED. Use countries instead. (Optional) Filter for banks that support sending to the destination country.
     *
     * Generated from protobuf field <code>string destination_country = 10 [deprecated = true];</code>
     * @return string
     */
    public function getDestinationCountry()
    {
        return $this->destination_country;
    }

    /**
     * DEPRECATED. Use countries instead. (Optional) Filter for banks that support sending to the destination country.
     *
     * Generated from protobuf field <code>string destination_country = 10 [deprecated = true];</code>
     * @param string $var
     * @return $this
     */
    public function setDestinationCountry($var)
    {
        GPBUtil::checkString($var, True);
        $this->destination_country = $var;

        return $this;
    }

    /**
     * (Optional) Filter for banks whose 'provider' matches the providers (case-insensitive)
     *
     * Generated from protobuf field <code>repeated string providers = 11;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProviders()
    {
        return $this->providers;
    }

    /**
     * (Optional) Filter for banks whose 'provider' matches the providers (case-insensitive)
     *
     * Generated from protobuf field <code>repeated string providers = 11;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProviders($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->providers = $arr;

        return $this;
    }

    /**
     * (Optional) Filter for banks whose bank code matches the given value (BLZ for German banks only)
     *
     * Generated from protobuf field <code>string bank_code = 12;</code>
     * @return string
     */
    public function getBankCode()
    {
        return $this->bank_code;
    }

    /**
     * (Optional) Filter for banks whose bank code matches the given value (BLZ for German banks only)
     *
     * Generated from protobuf field <code>string bank_code = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setBankCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->bank_code = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string countries = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCountries()
    {
        return $this->countries;
    }

    /**
     * Generated from protobuf field <code>repeated string countries = 13;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCountries($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->countries = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFeatures bank_features = 14;</code>
     * @return \Io\Token\Proto\Common\Bank\BankFeatures
     */
    public function getBankFeatures()
    {
        return $this->bank_features;
    }

    /**
     * Generated from protobuf field <code>.io.token.proto.common.bank.BankFeatures bank_features = 14;</code>
     * @param \Io\Token\Proto\Common\Bank\BankFeatures $var
     * @return $this
     */
    public function setBankFeatures($var)
    {
        GPBUtil::checkMessage($var, \Io\Token\Proto\Common\Bank\BankFeatures::class);
        $this->bank_features = $var;

        return $this;
    }

}

